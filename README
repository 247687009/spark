
.... ............................. .....
..O8888..88888...Z88....8888O..88.=87...
..88.88..88.88...8888...88.88..88.88....
..88.88..88. 88..8888...88..88.88.8:....
..88 ....88..88. 8D88...88. 88.8888.....
..,88 ...88I88 .78 88...88888..8888 ....
...888...8888 ..88,,8Z..88888..8888~....
....888..88.....888888..88.88..88.88....
.....88..88.....88..88..88 88 .88.88....
.88Z.88..88....= ....,..88.88 .88.88  ..
..88.88..88....$888888..$$..88.88..88...
..88888.......888888+888.......88..88...
............~,8888+?8888. ..............
............8=8888I?8888................
..............888?888888................
...............8888888O.................
........................................
........ .. . .. ..... ... . . ....... .

Spark - a Sinatra inspired micro web framework
----------------------------------------------

More documentation is on the way!

Simple example:
---------------

import spark.Route;
import spark.Spark;

public class SparkTest {
    
    public static void main(String[] args) {
        
        //  Spark.setPort(5678); <- Uncomment this if you wan't spark to listen on a port different than 4567.
        
        Spark.get(new Route("/hello") {
            @Override
            public Object handle() {
                return "Hello World!";
            }
        });
        
        Spark.get(new Route("/users/:name") {
            @Override
            public Object handle() {
                return "Selected user: " + params(":name");
            }
        });
        
        Spark.get(new Route("/news/:section") {
            @Override
            public Object handle() {
                return "<?xml version=\"1.0\" encoding=\"UTF-8\"?><news>" + params("section") + "</news>";
            }
        });
        
        Spark.get(new Route("/redirect") {
            @Override
            public Object handle() {
                redirect("/news/world");
                return null;
            }
        });
        
        Spark.get(new Route("/") {
            @Override
            public Object handle() {
                return "root";
            }
        });
        
        Spark.post(new Route("/") {
            @Override
            public Object handle() {
                return "echo: " + request.body();
            }
        });
    }
}

